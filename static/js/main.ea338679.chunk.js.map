{"version":3,"sources":["components/Navigation.js","fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/AppRouter.js","components/App.js","index.js"],"names":["Navigation","userObj","to","displayName","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","then","data","console","log","catch","error","errorCode","code","errorMessage","message","alert","signInWithEmailAndPassword","type","placeholder","required","onClick","Auth","onClickWithSocial","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","result","credential","accessToken","user","Nweet","nweet","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDelete","window","confirm","doc","id","delete","refFromURL","attachmentUrl","update","src","width","height","prev","NweetFactory","setNweet","attachment","setAttachment","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","url","collection","add","createdAt","Date","now","creatorId","maxLength","accept","files","length","reader","FileReader","onloadend","finishedEvent","readAsDataURL","readOnly","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","item","Profile","refreshUser","history","useHistory","myNweets","setMyNweets","setDisplayName","updateProfile","getMyNweets","where","orderBy","get","signOut","push","AppRouter","isLoggedIn","exact","path","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","args","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea338679.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\">{userObj.displayName}</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\"\r\nimport \"firebase/storage\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_API_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_API_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_API_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_API_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_API_APP_ID  \r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\nexport const firebaseInstance = firebase\r\nexport const authService = firebase.auth()\r\nexport const dbService = firebase.firestore()\r\nexport const storageService = firebase.storage()\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { authService } from 'fbase'\r\n\r\nexport const AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [newAccount, setNewAccount] = useState(true)\r\n    const [error, setError] = useState()\r\n\r\n    const onChange = (event) => {\r\n        const { target: { name, value } } = event\r\n        switch (name) {\r\n            case \"email\":\r\n                setEmail(value)\r\n                break;\r\n            case \"password\":\r\n                setPassword(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (newAccount) {\r\n            let data = await authService.createUserWithEmailAndPassword(email, password).then(function (data) {\r\n                console.log('success')\r\n            })\r\n                .catch(function (error) {\r\n                    console.log('failed')\r\n                    console.log(error)\r\n                    // Handle Errors here.\r\n                    var errorCode = error.code;\r\n                    var errorMessage = error.message;\r\n                    switch (errorCode) {\r\n                        case 'auth/email-already-in-use':\r\n                            alert(errorMessage);\r\n                            break;\r\n                        case 'auth/invalid-email':\r\n                            alert(errorMessage);\r\n                            break;\r\n                        case 'auth/operation-not-allowed':\r\n                            alert(errorMessage);\r\n                            break;\r\n                        case 'auth/weak-password':\r\n                            alert(errorMessage);\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                })\r\n            console.log(data)\r\n        }\r\n        else {\r\n            authService.signInWithEmailAndPassword(email, password).catch(function (error) {\r\n                // Handle Errors here.\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                switch (errorCode) {\r\n                    case 'auth/invalid-email':\r\n                        alert(errorMessage);\r\n                        break;\r\n                    case 'auth/user-disabled':\r\n                        alert(errorMessage);\r\n                        break;\r\n                    case 'auth/user-not-found':\r\n                        alert(errorMessage);\r\n                        break;\r\n                    case 'auth/wrong-password':\r\n                        alert(errorMessage);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                console.log(error);\r\n            })\r\n        }\r\n    }\r\n    \r\n    const toggleAccount = () => {\r\n        setNewAccount((newAccount) => { return !newAccount })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                />\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} onClick={onSubmit} />\r\n            </form>\r\n            <span onClick={toggleAccount}>\r\n                {newAccount ? \"Sign in\" : \"Creat Account\"}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthForm\r\n","import AuthForm from 'components/AuthForm'\r\nimport { authService, firebaseInstance } from 'fbase'\r\nimport React from 'react'\r\nimport { useState } from 'react'\r\n\r\nexport const Auth = () => {\r\n    \r\n    const onClickWithSocial = async (event) => {\r\n        const { target: { name } } = event\r\n\r\n        let provider\r\n        switch (name) {\r\n            case \"google\":\r\n                provider = new firebaseInstance.auth.GoogleAuthProvider()\r\n                break;\r\n            case \"github\":\r\n                provider = new firebaseInstance.auth.GithubAuthProvider()\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        await authService.signInWithPopup(provider).then(function (result) {\r\n            // This gives you a Google Access Token.\r\n            var token = result.credential.accessToken;\r\n            // The signed-in user info.\r\n            var user = result.user;\r\n            \r\n        });\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <AuthForm />\r\n            <div>\r\n                <button name=\"google\" onClick={onClickWithSocial}>Continue with Google</button>\r\n                <button name=\"github\" onClick={onClickWithSocial}>Continue with Github</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth;","import { dbService, storageService } from 'fbase'\r\nimport React, { useState } from 'react'\r\n\r\nexport const Nweet = ({ nweet, isOwner }) => {\r\n    const [editing, setEditing] = useState(false)\r\n    const [newNweet, setNewNweet] = useState(nweet.text)\r\n\r\n    const onDelete = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\")\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweet.id}`).delete()\r\n            await storageService.refFromURL(nweet.attachmentUrl).delete()\r\n        }\r\n    }\r\n\r\n    const onEdit = () => {\r\n        setEditing((prev) => !prev)\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault()\r\n        dbService.doc(`nweets/${nweet.id}`).update({\r\n            text: newNweet\r\n        })\r\n        setEditing(false)\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value }\r\n        } = event\r\n        setNewNweet(value)\r\n    }\r\n\r\n    const onCancel = () => {\r\n        setEditing(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                editing ?\r\n                    <>\r\n                        <form onSubmit={onSubmit}>\r\n                            <input type=\"text\" onChange={onChange} value={newNweet} />\r\n                            <input type=\"submit\" value=\"Update Nweet\" />\r\n                        </form>\r\n                        <button onClick={onCancel}>Cancel</button>\r\n                    </>\r\n                    : <></>\r\n            }\r\n            <h4>{nweet.text}</h4>\r\n            {nweet.attachmentUrl && <img src={nweet.attachmentUrl} width=\"50px\" height=\"50px\" />}\r\n                {isOwner &&\r\n                    <>\r\n                        <button onClick={onDelete}>Delete Nweet</button>\r\n                        <button onClick={onEdit}>Edit Nweet</button>\r\n                    </>\r\n                }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport { dbService, storageService } from 'fbase'\r\n\r\nexport const NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\")\r\n    const [attachment, setAttachment] = useState()\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\"\r\n        if (attachment) {\r\n            let fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`)\r\n            let response = await fileRef.putString(attachment, \"data_url\")\r\n            let url = await response.ref.getDownloadURL()\r\n            attachmentUrl = url\r\n        }\r\n\r\n        await dbService.collection(\"nweets\").add({\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl: attachmentUrl\r\n        })\r\n        setNweet(\"\")\r\n        setAttachment()\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        setNweet(event.target.value)\r\n    }\r\n\r\n    const onFileChanged = (event) => {\r\n        const {\r\n            target: {\r\n                files\r\n            }\r\n        } = event\r\n\r\n        if (files.length > 0) {\r\n            const reader = new FileReader()\r\n            reader.onloadend = (finishedEvent) => {\r\n                const {\r\n                    target: {\r\n                        result\r\n                    }\r\n                } = finishedEvent\r\n                setAttachment(result)\r\n            }\r\n            reader.readAsDataURL(files[0])\r\n        }\r\n\r\n    }\r\n\r\n    const onClearPhoto = (event) => {\r\n        setAttachment()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <input type=\"text\" placeholder=\"what's on your mind?\" maxLength=\"120\" value={nweet} onChange={onChange} />\r\n                <input type=\"file\" accept=\"image/*\" onChange={onFileChanged} />\r\n                <input type=\"Submit\" value=\"Nweet\" readOnly />\r\n                {attachment ?\r\n                    <div>\r\n                        <img src={attachment} width=\"50px\" height=\"50px\" />\r\n                        <button onClick={onClearPhoto}>Clear Photo</button>\r\n                    </div> : <></>}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NweetFactory","import React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { dbService } from 'fbase'\r\nimport { Nweet } from 'components/Nweet'\r\nimport NweetFactory from 'components/NweetFactory'\r\n\r\nexport const Home = ({ userObj }) => {\r\n\r\n    const [nweets, setNweets] = useState([])\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n            const nweetArray = snapshot.docs.map((item) => {\r\n                return {\r\n                    id: item.id,\r\n                    ...item.data()\r\n                }\r\n            })\r\n            setNweets(nweetArray)\r\n        })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <NweetFactory userObj={userObj} />\r\n            <div>\r\n                {\r\n                    nweets.map(item => (\r\n                        <Nweet\r\n                            key={item.id}\r\n                            nweet={item}\r\n                            isOwner={item.creatorId === userObj.uid}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import { authService, dbService } from 'fbase'\r\nimport React, { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport const Profile = ( {userObj, refreshUser} ) => {\r\n    const history = useHistory();\r\n    const [myNweets, setMyNweets] = useState(null)\r\n    const [displayName, setDisplayName] = useState(userObj.displayName)\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {\r\n                value\r\n            }\r\n        } = event\r\n        setDisplayName(value)\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault()\r\n        if (userObj.displayName !== displayName) {\r\n            await userObj.updateProfile({\r\n                displayName: displayName\r\n            })\r\n        }\r\n        refreshUser()\r\n    }\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut()\r\n        history.push(\"/\")\r\n    }\r\n    let getMyNweets = async () => {\r\n        let myNweets = await dbService\r\n        .collection(\"nweets\")\r\n        .where(\"creatorId\", \"==\", userObj.uid)\r\n        .orderBy(\"createdAt\")\r\n        .get()\r\n        console.log(\"woosom\")\r\n        console.log(myNweets.docs.length)\r\n        setMyNweets(myNweets.docs)\r\n    }\r\n    useEffect(() => {\r\n        getMyNweets()\r\n    }, [])\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input type=\"text\" placeholder=\"Display name\" value={displayName} onChange={onChange}/>\r\n                <input type=\"submit\" value=\"Update Profile\" readOnly />\r\n            </form>\r\n            <h3>{ myNweets ? myNweets.length : 0} Post</h3>\r\n            <button onClick={onLogOutClick}>Log Out</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nexport const AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ?\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            { userObj ? <Home userObj={userObj}/> : <></> }\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                    </>}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;\r\n","import { useState, useEffect } from \"react\";\nimport AppRouter from \"components/AppRouter\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false)\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [userObj, setUserObj] = useState(null)\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true)\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args)\n        })\n      }\n      else {\n        setIsLoggedIn(false)\n      }\n      setInit(true)\n    })\n  }, [])\n\n  let refreshUser = () => {\n    let user = authService.currentUser\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args)\n    })\n  }\n\n  return (\n    <>\n      {init ? <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} refreshUser={refreshUser}/> : \"Initializing..\"}\n      <footer>&copy; Woosom {new Date().getFullYear()}</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}